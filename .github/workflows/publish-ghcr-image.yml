name: Publish Docker GHCR Image

on:
  release:
    types: [published]
  push:
    branches:
      - "fix/ci-ghcr"
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag for the Docker image"
        required: true
        default: "1.2.5"
        type: string
permissions:
  contents: read
  packages: write

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set image tag
      #   id: vars
      #   run: |
      #     if [ "${{ github.event_name }}" = "release" ]; then
      #       # Get the release tag name
      #       RELEASE_TAG="${{ github.event.release.tag_name }}"
      #       # Remove 'v' prefix if present for Docker tag
      #       tag="${RELEASE_TAG#v}"
      #       echo "tag=$tag" >> $GITHUB_OUTPUT
      #     else
      #       echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
      #     fi
      - name: Build and Push Docker image (amd64)
        run: |
          IMAGE_NAME="ghcr.io/snouzy/workout-cool"
          TAG="test"

          # Build with --platform to ensure correct architecture targeting
          # Even on an amd64 runner, it's good practice for clarity.
          docker build --no-cache . \
            --platform linux/amd64 \
            --tag ${IMAGE_NAME}:${TAG}-amd64 \
            --tag ${IMAGE_NAME}:latest-amd64

          docker push ${IMAGE_NAME}:${TAG}-amd64
          docker push ${IMAGE_NAME}:latest-amd64

        # --- Build for linux/arm64 ---
      - name: Set up QEMU for ARM64 build
        uses: docker/setup-qemu-action@v3 # Essential for cross-architecture builds without buildx

      - name: Build and Push Docker image (arm64)
        run: |
          IMAGE_NAME="ghcr.io/snouzy/workout-cool"
          TAG="test"

          docker build --no-cache . \
            --platform linux/arm64 \
            --tag ${IMAGE_NAME}:${TAG}-arm64 \
            --tag ${IMAGE_NAME}:latest-arm64

          docker push ${IMAGE_NAME}:${TAG}-arm64
          docker push ${IMAGE_NAME}:latest-arm64

        # --- Create and Push Manifest Lists ---
      - name: Create and Push Manifest List (release tag)
        run: |
          IMAGE_NAME="ghcr.io/snouzy/workout-cool"
          TAG="test"

          docker manifest create ${IMAGE_NAME}:${TAG} \
            ${IMAGE_NAME}:${TAG}-amd64 \
            ${IMAGE_NAME}:${TAG}-arm64

          docker manifest push ${IMAGE_NAME}:${TAG}

      - name: Create and Push Manifest List (latest tag)
        run: |
          IMAGE_NAME="ghcr.io/snouzy/workout-cool"

          docker manifest create ${IMAGE_NAME}:latest \
            ${IMAGE_NAME}:latest-amd64 \
            ${IMAGE_NAME}:latest-arm64

          docker manifest push ${IMAGE_NAME}:latest
